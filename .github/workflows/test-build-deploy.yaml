name: 测试环境工作流

on: push

jobs:

  pytest:
    runs-on: ubuntu-latest

    services:
      cache:
        image: redis:7-alpine
        ports:
          - 8200:6379
      database:
        image: caitaozjlab/zjbs-database:latest
        ports:
          - 8100:3306
        env:
          MYSQL_ROOT_PASSWORD: zjlab2022root
          MYSQL_USER: zjlab
          MYSQL_PASSWORD: zjlab2022
          MYSQL_DATABASE: zj_brain_science_platform
          TZ: Asia/Shanghai

    steps:
      - name: 切换到推送的分支
        uses: actions/checkout@v4

      - name: 安装Poetry
        run: pipx install poetry

      - name: 安装Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: poetry

      - name: 安装依赖项
        run: poetry install --without dev

      - name: 创建文件夹
        run: mkdir -p "${HOME}/log" "${HOME}/file"

      - name: 运行alembic
        run: DEBUG_MODE=on LOG_ROOT="${HOME}/log" FILE_ROOT="${HOME}/file" poetry run alembic upgrade head

      - name: 运行Pytest
        run: DEBUG_MODE=on LOG_ROOT="${HOME}/log" FILE_ROOT="${HOME}/file" poetry run pytest --junitxml=pytest_report.xml

      - name: 生成测试结果报告
        uses: test-summary/action@v2
        if: always()
        with:
          paths: ./pytest_report.xml
          show: all

  build-docker-image:
    needs: pytest
    runs-on: ubuntu-latest

    steps:
      - name: 切换到推送的分支
        uses: actions/checkout@v4

      - name: 设置时区
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: Asia/Shanghai

      - name: 获取base镜像tag
        id: getBaseImageTag
        shell: bash
        run: |
          baseImageVersion="$(head -n 1 ./deploy/image-version/base.version)"
          baseImageTag="caitaozjlab/zjbs-base:${baseImageVersion}"
          echo "baseImageTag=${baseImageTag}" >> $GITHUB_OUTPUT

      - name: 生成镜像版本
        id: generateImageVersion
        shell: bash
        run: |
          dateTime="$(date +'%Y%m%d-%H%M%S')"
          gitHash="$(git -C "$projectDir" rev-parse --short=8 HEAD)"
          imageVersion="${dateTime}-${gitHash}"
          echo "imageVersion=${imageVersion}" | tee -a $GITHUB_OUTPUT

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录到Docker Hub
        uses: docker/login-action@v3
        with:
          username: caitaozjlab
          password: dckr_pat_3vHgyUohktPfh6AkThPE88CUzIs

      - name: 构建并推送镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deploy/dockerfile/platform.Dockerfile
          build-args: |
            BASE_IMAGE_TAG=${{ steps.getBaseImageTag.outputs.baseImageTag }}
          push: true
          tags: |
            caitaozjlab/zjbs-platform:${{ steps.generateImageVersion.outputs.imageVersion }}
            caitaozjlab/zjbs-platform:latest
          cache-from: type=registry,ref=caitaozjlab/zjbs-platform:latest
          cache-to: type=inline

      - name: 生成镜像结果报告
        shell: bash
        run: |
          echo '# Docker 镜像版本' >> $GITHUB_STEP_SUMMARY
          echo '|Repo|Version|' >> $GITHUB_STEP_SUMMARY
          echo '|---|---|' >> $GITHUB_STEP_SUMMARY
          echo '|`caitaozjlab/zjbs-platform`|`${{ steps.generateImageVersion.outputs.imageVersion }}`|' >> $GITHUB_STEP_SUMMARY
