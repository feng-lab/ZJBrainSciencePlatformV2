"""migrate to sqlalchemy

Revision ID: 041730ec910e
Revises: a263973ef3a5
Create Date: 2022-12-09 06:27:58.681547

"""
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision = "041730ec910e"
down_revision = "a263973ef3a5"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "experiment",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "experiment", "gmt_create", existing_type=mysql.DATETIME(), nullable=False, comment="创建时间"
    )
    op.alter_column(
        "experiment", "gmt_modified", existing_type=mysql.DATETIME(), nullable=False, comment="修改时间"
    )
    op.alter_column(
        "experiment",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.alter_column(
        "experiment",
        "name",
        existing_type=mysql.VARCHAR(length=255),
        comment="实验名称",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "type",
        existing_type=mysql.VARCHAR(length=50),
        comment="实验类型",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "location",
        existing_type=mysql.VARCHAR(length=255),
        comment="实验地点",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "start_at",
        existing_type=mysql.DATETIME(),
        comment="实验开始时间",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "end_at",
        existing_type=mysql.DATETIME(),
        comment="实验结束时间",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "main_operator",
        existing_type=mysql.INTEGER(),
        comment="主操作者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "is_non_invasive",
        existing_type=mysql.TINYINT(display_width=1),
        comment="是否为无创实验",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "subject_type",
        existing_type=mysql.VARCHAR(length=50),
        comment="被试类型",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "subject_num",
        existing_type=mysql.INTEGER(),
        comment="被试数量",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "neuron_source",
        existing_type=mysql.VARCHAR(length=50),
        comment="神经元细胞来源部位",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "stimulation_type",
        existing_type=mysql.VARCHAR(length=50),
        comment="刺激类型",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "session_num",
        existing_type=mysql.INTEGER(),
        comment="实验session数量",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "trail_num",
        existing_type=mysql.INTEGER(),
        comment="实验trail数量",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "is_shared",
        existing_type=mysql.TINYINT(display_width=1),
        comment="实验是否公开",
        existing_nullable=True,
    )
    op.create_index(op.f("ix_experiment_gmt_create"), "experiment", ["gmt_create"], unique=False)
    op.create_table_comment("experiment", "实验", existing_comment=None, schema=None)
    op.alter_column(
        "experiment_assistant",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "experiment_assistant",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="创建时间",
    )
    op.alter_column(
        "experiment_assistant",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="修改时间",
    )
    op.alter_column(
        "experiment_assistant",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.create_index(
        op.f("ix_experiment_assistant_gmt_create"),
        "experiment_assistant",
        ["gmt_create"],
        unique=False,
    )
    op.create_table_comment("experiment_assistant", "实验助手", existing_comment=None, schema=None)
    op.alter_column(
        "file",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "file", "gmt_create", existing_type=mysql.DATETIME(), nullable=False, comment="创建时间"
    )
    op.alter_column(
        "file", "gmt_modified", existing_type=mysql.DATETIME(), nullable=False, comment="修改时间"
    )
    op.alter_column(
        "file",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.alter_column(
        "file",
        "experiment_id",
        existing_type=mysql.INTEGER(),
        comment="实验ID",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "path",
        existing_type=mysql.VARCHAR(length=255),
        comment="逻辑路径",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "extension",
        existing_type=mysql.VARCHAR(length=50),
        comment="文件扩展名",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "index",
        existing_type=mysql.INTEGER(),
        comment="同一实验下的文件序号",
        existing_nullable=False,
    )
    op.alter_column(
        "file", "size", existing_type=mysql.FLOAT(), comment="同一实验下的文件序号", existing_nullable=False
    )
    op.alter_column(
        "file",
        "is_original",
        existing_type=mysql.TINYINT(display_width=1),
        comment="是否是设备产生的原始文件",
        existing_nullable=False,
    )
    op.drop_index("ix_file_path", table_name="file")
    op.create_index(op.f("ix_file_gmt_create"), "file", ["gmt_create"], unique=False)
    op.create_table_comment("file", "文件", existing_comment=None, schema=None)
    op.alter_column(
        "notification",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "notification",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="创建时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "notification",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="修改时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "notification",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.alter_column(
        "notification",
        "type",
        existing_type=mysql.VARCHAR(length=20),
        comment="消息类型",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "creator",
        existing_type=mysql.INTEGER(),
        comment="消息发送者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "receiver",
        existing_type=mysql.INTEGER(),
        comment="消息接收者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "status",
        existing_type=mysql.VARCHAR(length=20),
        nullable=False,
        comment="消息状态",
    )
    op.alter_column(
        "notification",
        "content",
        existing_type=mysql.TEXT(),
        comment="消息内容",
        existing_nullable=False,
    )
    op.create_index(
        op.f("ix_notification_gmt_create"), "notification", ["gmt_create"], unique=False
    )
    op.create_table_comment("notification", "通知", existing_comment=None, schema=None)
    op.alter_column(
        "paradigm",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "paradigm", "gmt_create", existing_type=mysql.DATETIME(), nullable=False, comment="创建时间"
    )
    op.alter_column(
        "paradigm", "gmt_modified", existing_type=mysql.DATETIME(), nullable=False, comment="修改时间"
    )
    op.alter_column(
        "paradigm",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.alter_column(
        "paradigm",
        "experiment_id",
        existing_type=mysql.INTEGER(),
        comment="实验ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm",
        "creator",
        existing_type=mysql.INTEGER(),
        comment="创建者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm",
        "description",
        existing_type=mysql.TEXT(),
        comment="描述文字",
        existing_nullable=False,
    )
    op.create_index(op.f("ix_paradigm_gmt_create"), "paradigm", ["gmt_create"], unique=False)
    op.create_table_comment("paradigm", "实验范式", existing_comment=None, schema=None)
    op.alter_column(
        "paradigm_file",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "paradigm_file",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="创建时间",
    )
    op.alter_column(
        "paradigm_file",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="修改时间",
    )
    op.alter_column(
        "paradigm_file",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.alter_column(
        "paradigm_file",
        "paradigm_id",
        existing_type=mysql.INTEGER(),
        comment="实验范式ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm_file",
        "file_id",
        existing_type=mysql.INTEGER(),
        comment="文件ID",
        existing_nullable=False,
    )
    op.drop_index("ix_paradigm_file_file_id", table_name="paradigm_file")
    op.create_index(
        op.f("ix_paradigm_file_gmt_create"), "paradigm_file", ["gmt_create"], unique=False
    )
    op.create_table_comment("paradigm_file", "实验范式文件", existing_comment=None, schema=None)
    op.alter_column(
        "user",
        "id",
        existing_type=mysql.INTEGER(),
        comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "user",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="创建时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "user",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=False,
        comment="修改时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "user",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
        comment="该行是否被删除",
    )
    op.alter_column(
        "user",
        "username",
        existing_type=mysql.VARCHAR(length=255),
        comment="用户名",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "hashed_password",
        existing_type=mysql.VARCHAR(length=255),
        comment="密码哈希",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "staff_id",
        existing_type=mysql.VARCHAR(length=255),
        comment="员工号",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "last_login_time",
        existing_type=mysql.DATETIME(),
        comment="上次登录时间",
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "last_logout_time",
        existing_type=mysql.DATETIME(),
        comment="上次下线时间",
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "access_level",
        existing_type=mysql.INTEGER(),
        comment="权限级别",
        existing_nullable=False,
    )
    op.create_index(op.f("ix_user_gmt_create"), "user", ["gmt_create"], unique=False)
    op.create_table_comment("user", "用户", existing_comment=None, schema=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment("user", existing_comment="用户", schema=None)
    op.drop_index(op.f("ix_user_gmt_create"), table_name="user")
    op.alter_column(
        "user",
        "access_level",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="权限级别",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "last_logout_time",
        existing_type=mysql.DATETIME(),
        comment=None,
        existing_comment="上次下线时间",
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "last_login_time",
        existing_type=mysql.DATETIME(),
        comment=None,
        existing_comment="上次登录时间",
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "staff_id",
        existing_type=mysql.VARCHAR(length=255),
        comment=None,
        existing_comment="员工号",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "hashed_password",
        existing_type=mysql.VARCHAR(length=255),
        comment=None,
        existing_comment="密码哈希",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "username",
        existing_type=mysql.VARCHAR(length=255),
        comment=None,
        existing_comment="用户名",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "user",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "user",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "user",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table_comment("paradigm_file", existing_comment="实验范式文件", schema=None)
    op.drop_index(op.f("ix_paradigm_file_gmt_create"), table_name="paradigm_file")
    op.create_index("ix_paradigm_file_file_id", "paradigm_file", ["file_id"], unique=False)
    op.alter_column(
        "paradigm_file",
        "file_id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="文件ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm_file",
        "paradigm_id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="实验范式ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm_file",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "paradigm_file",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
    )
    op.alter_column(
        "paradigm_file",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
    )
    op.alter_column(
        "paradigm_file",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table_comment("paradigm", existing_comment="实验范式", schema=None)
    op.drop_index(op.f("ix_paradigm_gmt_create"), table_name="paradigm")
    op.alter_column(
        "paradigm",
        "description",
        existing_type=mysql.TEXT(),
        comment=None,
        existing_comment="描述文字",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm",
        "creator",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="创建者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm",
        "experiment_id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="实验ID",
        existing_nullable=False,
    )
    op.alter_column(
        "paradigm",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "paradigm",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
    )
    op.alter_column(
        "paradigm",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
    )
    op.alter_column(
        "paradigm",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table_comment("notification", existing_comment="通知", schema=None)
    op.drop_index(op.f("ix_notification_gmt_create"), table_name="notification")
    op.alter_column(
        "notification",
        "content",
        existing_type=mysql.TEXT(),
        comment=None,
        existing_comment="消息内容",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "status",
        existing_type=mysql.VARCHAR(length=20),
        nullable=True,
        comment=None,
        existing_comment="消息状态",
    )
    op.alter_column(
        "notification",
        "receiver",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="消息接收者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "creator",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="消息发送者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "type",
        existing_type=mysql.VARCHAR(length=20),
        comment=None,
        existing_comment="消息类型",
        existing_nullable=False,
    )
    op.alter_column(
        "notification",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "notification",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "notification",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "notification",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table_comment("file", existing_comment="文件", schema=None)
    op.drop_index(op.f("ix_file_gmt_create"), table_name="file")
    op.create_index("ix_file_path", "file", ["path"], unique=False)
    op.alter_column(
        "file",
        "is_original",
        existing_type=mysql.TINYINT(display_width=1),
        comment=None,
        existing_comment="是否是设备产生的原始文件",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "size",
        existing_type=mysql.FLOAT(),
        comment=None,
        existing_comment="同一实验下的文件序号",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "index",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="同一实验下的文件序号",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "extension",
        existing_type=mysql.VARCHAR(length=50),
        comment=None,
        existing_comment="文件扩展名",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "path",
        existing_type=mysql.VARCHAR(length=255),
        comment=None,
        existing_comment="逻辑路径",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "experiment_id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="实验ID",
        existing_nullable=False,
    )
    op.alter_column(
        "file",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "file",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
    )
    op.alter_column(
        "file",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
    )
    op.alter_column(
        "file",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table_comment("experiment_assistant", existing_comment="实验助手", schema=None)
    op.drop_index(op.f("ix_experiment_assistant_gmt_create"), table_name="experiment_assistant")
    op.alter_column(
        "experiment_assistant",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "experiment_assistant",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
    )
    op.alter_column(
        "experiment_assistant",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
    )
    op.alter_column(
        "experiment_assistant",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_table_comment("experiment", existing_comment="实验", schema=None)
    op.drop_index(op.f("ix_experiment_gmt_create"), table_name="experiment")
    op.alter_column(
        "experiment",
        "is_shared",
        existing_type=mysql.TINYINT(display_width=1),
        comment=None,
        existing_comment="实验是否公开",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "trail_num",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="实验trail数量",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "session_num",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="实验session数量",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "stimulation_type",
        existing_type=mysql.VARCHAR(length=50),
        comment=None,
        existing_comment="刺激类型",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "neuron_source",
        existing_type=mysql.VARCHAR(length=50),
        comment=None,
        existing_comment="神经元细胞来源部位",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "subject_num",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="被试数量",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "subject_type",
        existing_type=mysql.VARCHAR(length=50),
        comment=None,
        existing_comment="被试类型",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "is_non_invasive",
        existing_type=mysql.TINYINT(display_width=1),
        comment=None,
        existing_comment="是否为无创实验",
        existing_nullable=True,
    )
    op.alter_column(
        "experiment",
        "main_operator",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主操作者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "end_at",
        existing_type=mysql.DATETIME(),
        comment=None,
        existing_comment="实验结束时间",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "start_at",
        existing_type=mysql.DATETIME(),
        comment=None,
        existing_comment="实验开始时间",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "location",
        existing_type=mysql.VARCHAR(length=255),
        comment=None,
        existing_comment="实验地点",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "type",
        existing_type=mysql.VARCHAR(length=50),
        comment=None,
        existing_comment="实验类型",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "name",
        existing_type=mysql.VARCHAR(length=255),
        comment=None,
        existing_comment="实验名称",
        existing_nullable=False,
    )
    op.alter_column(
        "experiment",
        "is_deleted",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=True,
        comment=None,
        existing_comment="该行是否被删除",
    )
    op.alter_column(
        "experiment",
        "gmt_modified",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="修改时间",
    )
    op.alter_column(
        "experiment",
        "gmt_create",
        existing_type=mysql.DATETIME(),
        nullable=True,
        comment=None,
        existing_comment="创建时间",
    )
    op.alter_column(
        "experiment",
        "id",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="主键",
        existing_nullable=False,
        autoincrement=True,
    )
    # ### end Alembic commands ###
